# プロキシ(クライアント=>インターネットへのアクセスの中継)先の設定
# Nginxが受け取ったリクエストをバックエンドのpumaに送信
upstream app {
  # nginxとpumaを連携、つまりUNIXドメインソケット通信したいのでpuma.sockを指定
  server unix:///holo_break_api/tmp/sockets/puma.sock;
}
server {
  # 80番ポートを許可
  listen 80;
  # host名を指定。
  server_name example.com[or 192.168.33.10[or localhost]];
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  # ドキュメントルート(静的ファイルのパス)
  root /holo_break_api/public;
  gzip on; #
  gzip_types application/json
  gzip_min_length 1k;
  gzip_proxied any;
  client_max_body_size 100m;
  error_page 404 /404.html;
  error_page 505 502 503 504 /500.html;
  # ドキュメントルート配下を以下の先頭から順番に辿る
  try_files $uri/index.html $uri @app;
  keepalive_timeout 55;
  # リバースプロキシ(インターネット=>サーバへのアクセスの中継)関連。
  # 後方一致で画像などの静的ファイルが指定された場合はpublic/配下のファイルを直接返す(Railsを介さない)
  # 上記、try_filesで指定した@appが呼び出された場合のみ、以下の設定を読み込む
  location @app {
    proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://app;
  }
}